# Cloud Run 컨테이너가 제공하는 스토리지 사용
upload.path=/tmp/uploads/
app.domain=http://localhost:8080
front-server.domain=http://localhost:3000

app.frontend.redirect-uri=https://mungnote.vercel.app/
gemini.api.key=${GEMINI_SECRET}

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

spring.cloud.openfeign.client.config.default.logger-level=full

# logging
logging.level.root=info
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.springframework.cloud.openfeign=trace
logging.level.org.springframework.client.RestTemplate=info
logging.level.org.springframework.security=debug

# jpa
spring.jpa.open-in-view=false
spring.sql.init.mode=never
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

# DB (server <-> DB)
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul
# JSON (client <-> server)
spring.jackson.time-zone=Asia/Seoul

#jwt(30min / 7days)
jwt.secret=${JWT_SECRET}
jwt.access-expiration=1800000
jwt.refresh-expiration=604800000

# redis
spring.data.redis.host=redis-17706.c321.us-east-1-2.ec2.redns.redis-cloud.com
spring.data.redis.username=default
spring.data.redis.password=${REDIS_SECRET:}
spring.data.redis.port=17706
spring.data.redis.ssl.enabled=true

# post db
spring.datasource.url=jdbc:postgresql://aws-0-ap-northeast-2.pooler.supabase.com:5432/postgres
spring.datasource.username=postgres.jtyvmwnntqqznfxufqxt
spring.datasource.password=${POSTGRESQL_SECRET:}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=15

# smtp
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ash373758@gmail.com
spring.mail.password=${SPRING_MAIL_SECRET}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.protocol=smtp

email.verification.code.expiration-seconds=180


# swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.default-models-expand-depth=0
springdoc.swagger-ui.try-it-out-enabled=true

# bucket
google.cloud.storage.bucket=mungnote-storage
image.clean.period-days=30
spring.servlet.multipart.max-file-size=3MB
spring.servlet.multipart.max-request-size=20MB


# OAuth2.0
oauth2.redirect.base-url=https://mungdiary-172598302113.asia-northeast3.run.app
### local oauth2.redirect.base-url=http://localhost:8080
# google
# registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}
### local redirect-uri : http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.redirect-uri=https://mungdiary-172598302113.asia-northeast3.run.app/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=email, profile
# google - provider (oidc > oauth)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# naver
# registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_SECRET}
### local redirect-uri : http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.redirect-uri=https://mungdiary-172598302113.asia-northeast3.run.app/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name, email, nickname
# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# kakao
# registration
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_SECRET}
### local redirect-uri : http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.redirect-uri=https://mungdiary-172598302113.asia-northeast3.run.app/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
# provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
