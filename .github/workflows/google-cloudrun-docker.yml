# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when a commit is pushed to the "main"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Developer (roles/run.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 3. Change the values in the "env" block to match your values.

name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

      - name: Authenticate with Google Cloud (JSON Key)
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}


      # BEGIN - Docker auth and build
      #
      # If you already have a container image, you can omit these steps.
      - name: 'Docker Auth'
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev


      - name: 'Build and Push Container'
        run: |
          IMAGE=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_REPOSITORY }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE
          
      - name: 'Deploy to Cloud Run'
        run: |
          IMAGE=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_REPOSITORY }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }}
          gcloud run deploy ${{ secrets.SERVICE_NAME }} \
            --image $IMAGE \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "JWT_SECRET=${{ secrets.JWT_SECRET }},REDIS_SECRET=${{ secrets.REDIS_SECRET }},POSTGRESQL_SECRET=${{ secrets.POSTGRESQL_SECRET }},SPRING_MAIN_SECRET=${{ secrets.SPRING_MAIL_SECRET }}"

        # END - Docker auth and build

      - name: Show Cloud Run URL
        run: |
          gcloud run services describe ${{ secrets.SERVICE_NAME }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --format="value(status.url)"
